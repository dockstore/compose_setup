#!/usr/bin/env bash

# Created by Solomon Shorser
# Hacked by Denis Yuen

set -o errexit
set -o pipefail
set -o nounset


# When changing these versions, you will probably need to delete all files in the working directory
# except for the dockstore_launcher_config directory in order to get a clean new copy of
# the Docker compose templates

cat <<MSG
DOCKSTORE INSTALLATION BOOTSTRAPPER
-----------------------------------------------------------------------------
MSG

function template()
{
    mkdir -p config

    NGINX_CONF_DIRECTORY="config"
    NGINX_HTML2_DIRECTORY="config"
    WEBSERVICE_DIRECTORY="config"

    if [ $IS_FARGATE_DEPLOY == "true" ]; then
        mkdir -p config/webservice
        mkdir -p config/nginx-conf
        mkdir -p config/nginx-html2
        # Place the config files into specific directories so they can be mounted to container paths as bind mounts
        NGINX_CONF_DIRECTORY="${NGINX_CONF_DIRECTORY}/nginx-conf"
        NGINX_HTML2_DIRECTORY="${NGINX_HTML2_DIRECTORY}/nginx-html2"
        WEBSERVICE_DIRECTORY="${WEBSERVICE_DIRECTORY}/webservice"

        wget -qO ${NGINX_HTML2_DIRECTORY}/index.html https://gui.dockstore.org/${UI2_HASH}/index.html
        wget -qO ${NGINX_HTML2_DIRECTORY}/manifest.json https://gui.dockstore.org/${UI2_HASH}/manifest.json
    fi

    mustache dockstore_launcher_config/compose.config templates/Dockerfile_ui2.template > config/Dockerfile_ui2
    mustache dockstore_launcher_config/compose.config templates/robots.txt.template > ${NGINX_HTML2_DIRECTORY}/robots.txt
    mustache dockstore_launcher_config/compose.config templates/default.nginx_http.conf.template > ${NGINX_CONF_DIRECTORY}/default.nginx_http.conf
    mustache dockstore_launcher_config/compose.config templates/default.nginx_http.shared.conf.template > ${NGINX_CONF_DIRECTORY}/default.nginx_http.shared.conf
    mustache dockstore_launcher_config/compose.config templates/default.nginx_http.security.conf.template > ${NGINX_CONF_DIRECTORY}/default.nginx_http.security.conf

    mustache dockstore_launcher_config/compose.config templates/web.yml.template > ${WEBSERVICE_DIRECTORY}/web.yml
    mustache dockstore_launcher_config/compose.config templates/init_webservice.sh.template > ${WEBSERVICE_DIRECTORY}/init_webservice.sh
    mustache dockstore_launcher_config/compose.config templates/init_migration.sh.template > ${WEBSERVICE_DIRECTORY}/init_migration.sh
    chmod a+rx ${WEBSERVICE_DIRECTORY}/init_webservice.sh
    chmod a+rx ${WEBSERVICE_DIRECTORY}/init_migration.sh

    mustache dockstore_launcher_config/compose.config templates/elasticsearch.yml > config/elasticsearch.yml
    mustache dockstore_launcher_config/compose.config templates/metricbeat.yml > config/metricbeat.yml
    mustache dockstore_launcher_config/compose.config templates/essnapshot_backup.sh > scripts/essnapshot_backup.sh
    
    mustache dockstore_launcher_config/compose.config templates/jvm.options.es.template > config/jvm.options.es
    mustache dockstore_launcher_config/compose.config templates/jvm.options.dockstore.es.template > config/jvm.options.dockstore.es
    mustache dockstore_launcher_config/compose.config templates/jvm.options.logstash.template > config/jvm.options.logstash
    mustache dockstore_launcher_config/compose.config templates/postgres_backup.sh.template > scripts/postgres_backup.sh
    chmod a+rx scripts/postgres_backup.sh
    # .env file
    mustache dockstore_launcher_config/compose.config templates/env.template > .env

    mkdir -p config/rules
    for f in $(ls templates/rules/); do mustache dockstore_launcher_config/compose.config templates/rules/$f > config/rules/$f; done
}

# Delete any galaxy plugin versions already in folder and download if a version has been specified.
function download_galaxy()
{
    if [ ! -d "../language-plugins" ] ; then
        mkdir ../language-plugins
    fi

    find ../language-plugins -regextype posix-extended -regex '.*dockstore-galaxy-interface.*' -delete
    wget -nc -P ../language-plugins/ https://artifacts.oicr.on.ca/artifactory/collab-release/com/github/galaxyproject/dockstore-galaxy-interface/dockstore-galaxy-interface/${GALAXY_PLUGIN_VERSION}/dockstore-galaxy-interface-${GALAXY_PLUGIN_VERSION}.jar

}

#Read the config file if it exists
if [ -f dockstore_launcher_config/compose.config ] ; then
    source <(jq -r 'to_entries|map("\(.key)=\"\(.value|tostring)\"")|.[]' dockstore_launcher_config/compose.config)
fi

template

download_galaxy "$*"

if [ $IS_FARGATE_DEPLOY == "false" ]; then
    # We need to set the environment variable for the image digest
    source .env
    DOCKSTORE_IMAGE_DIGEST=$(scripts/webservice-image-digest.py $DOCKSTORE_VERSION)
    echo "DOCKSTORE_IMAGE_DIGEST=$DOCKSTORE_IMAGE_DIGEST" >> .env

    docker-compose build
fi

echo "Exiting now."
