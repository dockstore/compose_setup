template: Hello, %s!
quayClientID: {{ QUAY_CLIENT_ID }} 
# port should match the port where the UI is being hosted, 9000 by default
quayRedirectURI: dev-only
githubClientID: {{ GITHUB_CLIENT2_ID }}
githubClientSecret: {{ GITHUB_CLIENT2_SECRET }}
# port should match the port where the UI is being hosted, 9000 by default
githubRedirectURI: dev-only
bitbucketClientID: {{ BITBUCKET_CLIENT_ID }}
bitbucketClientSecret: {{ BITBUCKET_CLIENT_SECRET }} 

gitlabClientID: {{ GITLAB_CLIENT_ID }}
gitlabClientSecret: {{ GITLAB_CLIENT_SECRET }}
gitlabRedirectURI: https://{{ DOMAIN_NAME }}:443/auth/gitlab.com

googleClientID: {{ GOOGLE_CLIENT_ID }}
googleClientSecret: {{ GOOGLE_CLIENT_SECRET }}
googleRedirectURI: https://{{ DOMAIN_NAME }}:443

discourseKey: {{ DISCOURSE_KEY }}
discourseUrl: {{ DISCOURSE_URL }}
discourseCategoryId: {{ DISCOURSE_CATEGORY_ID }}

zenodoClientID: {{ ZENODO_CLIENT_ID }}
zenodoClientSecret: {{ ZENODO_CLIENT_SECRET }}
zenodoRedirectURI: https://{{ DOMAIN_NAME }}/auth/zenodo.org
zenodoUrl: {{ ZENODO_URL }}

orcidClientID: {{ ORCID_CLIENT_ID }}
orcidClientSecret: {{ ORCID_CLIENT_SECRET }}

gitHubAppPrivateKeyFile: /dockstore/github-key/dockstore-github-private-key.pem
gitHubAppId: {{ GITHUB_APP_ID }}

toolTesterBucket: {{ TOOLTESTER_BUCKET_NAME }}

checkUrlLambdaUrl: {{ CHECK_URL_EXISTS_ENDPOINT }}

limitConfig:
  workflowLimit: 50
  workflowVersionLimit: 50

esconfiguration:
  port: {{ ELASTICSEARCH_PORT }}
  hostname: {{ ELASTICSEARCH_DOMAIN }}
  protocol: {{ ELASTICSEARCH_PROTOCOL }}
  user: {{ ELASTICSEARCH_USER }}
  password: {{{ ELASTICSEARCH_PASSWORD }}}
  maxConcurrentSessions: {{ ELASTICSEARCH_MAX_CONCURRENT_SESSIONS }}

authorizerType: {{ AUTHORIZER_TYPE }}
externalGoogleClientIdPrefixes:
  - {{ EXTERNAL_GOOGLE_CLIENT_PREFIX1  }}

samconfiguration:
  basepath: {{ SAM_PATH }}

metricsConfig:
  s3BucketName: {{ METRICS_BUCKET_NAME }}

# the following values describe where the webservice is being run (and on what port and using what scheme) to configure swagger
externalConfig:
  basePath: /api/
  hostname: {{ DOMAIN_NAME }}
  scheme: https
  port:

authenticationCachePolicy: maximumSize=10000, expireAfterAccess=10s

httpClient:
  timeout: 5500ms
  connectionTimeout: 5500ms
  timeToLive: 1h
  cookiesEnabled: false
  maxConnections: 1024
  maxConnectionsPerRoute: 1024
  keepAlive: 0ms
  retries: 0
  
logging:
  loggers:
    #customize logging for hibernate session metrics
    "org.hibernate.engine.internal.StatisticalLoggingSessionEventListener":
      # false = don't create new log event, but override existing
      additive: false
      appenders:
        - type: console
          logFormat: "%-5p [%d{ISO8601,UTC}] %c\t %replace(%replace(%msg){'[\\n{};]',''}){'([A-Za-z]) ([A-Za-z])','$1_$2'}%n%rEx"
  #logging for other dropwizard things
  appenders:
    - type: console
# this the default dropwizard (logstash) logFormat for reference      
      #logFormat: "%-5p [%d{ISO8601,UTC}] %c: %m%n%rEx"
# this is a logFormat that replaces new lines with carriage returns
      logFormat: "%-5p [%d{ISO8601,UTC}] %c: %replace(%m){'\n','\r'}%n%replace(%rEx){'\n','\r'}"


database:
  # the name of your JDBC driver
  driverClass: org.postgresql.Driver

  # the username
  user: dockstore

  # the password
  password: {{{ DOCKSTORE_DBPASSWORD }}}

  # the JDBC URL
  url: jdbc:postgresql://{{ DATABASE_DOMAIN }}:5432/postgres

  # any properties specific to your JDBC driver:
  properties:
    charSet: UTF-8
    hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
    # create database as needed, disable in production
    hibernate.hbm2ddl.auto: validate
    hibernate.jdbc.batch_size: 30
    hibernate.order_inserts: true
    hibernate.order_updates: true

  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* MyApplication Health Check */ SELECT 1"

  # the minimum number of connections to keep open
  minSize: 8

  # the maximum number of connections to keep open
  maxSize: 32

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: true
  checkConnectionOnBorrow: true
  checkConnectionOnConnect: true
  checkConnectionOnReturn: true

  removeAbandoned: true
  abandonWhenPercentageFull: 80
  logAbandonedConnections: true
  removeAbandonedTimeout: 5 minutes

server:
  applicationConnectors:
    - type: custom-http
      port: 8080
  adminConnectors:
    - type: http
      port: 8001
{{#LOGSTASH}}
  requestLog:
    type: classic
    timeZone: UTC
    appenders:
      - type: logstash
        host: {{ LOGSTASH_HOST }}
        port: {{#PRODUCTION}}5055{{/PRODUCTION}}{{^PRODUCTION}}5066{{/PRODUCTION}}
{{/LOGSTASH}}

uiConfig:
  dnaStackImportUrl: https://app.dnastack.com/#/app/workflow/import/dockstore
  dnaNexusImportUrl: https://platform.dnanexus.com/panx/tools/import-workflow
  terraImportUrl: {{ TERRA_IMPORT_URL }}
  bdCatalystTerraImportUrl: {{ BD_CATALYST_TERRA_IMPORT_URL }}
  bdCatalystSevenBridgesImportUrl: {{ BD_CATALYST_SEVEN_BRIDGES_IMPORT_URL }}
  elwaziImportUrl:  {{ ELWAZI_IMPORT_URL }}
  colabImportUrl: {{ COLAB_IMPORT_URL }}
  mybinderImportUrl: {{ MYBINDER_IMPORT_URL }}
  gitHubCodespacesImportUrl: {{ GITHUB_CODESPACES_IMPORT_URL }}


  gitHubAuthUrl: https://github.com/login/oauth/authorize
  gitHubRedirectPath: /auth/github.com
  gitHubScope: read:org,user:email

  quayIoAuthUrl: https://quay.io/oauth/authorize
  quayIoRedirectPath: /auth/quay.io
  quayIoScope: repo:read,user:read

  bitBucketAuthUrl: https://bitbucket.org/site/oauth2/authorize

  gitlabAuthUrl: https://gitlab.com/oauth/authorize
  gitlabRedirectPath: /auth/gitlab.com
  gitlabScope: read_api read_user

  googleScope: profile email
  tagManagerId: {{ TAG_MANAGER_ID }} 

  cwlVisualizerUri: https://view.commonwl.org

  gitHubAppInstallationUrl: https://github.com/apps/{{ GITHUB_APP_NAME }}

  zenodoAuthUrl: {{ ZENODO_URL }}/oauth/authorize
  zenodoRedirectPath: /auth/zenodo.org
  zenodoScope: deposit:write deposit:actions

  orcidAuthUrl: {{ ORCID_URL }}/oauth/authorize
  orcidRedirectPath: /auth/orcid.org
  orcidScope: {{ ORCID_SCOPE }}

  documentationUrl: {{ DOCUMENTATION_URL }}
  featuredContentUrl: {{ FEATURED_CONTENT_URL }}
  featuredNewsUrl: {{ FEATURED_NEWS_URL }}

  deployVersion: "{{ DEPLOY_VERSION }}"
  cwlParsingLambdaVersion: {{ CWL_PARSING_LAMBDA_VERSION }}
  wdlParsingLambdaVersion: {{ WDL_PARSING_LAMBDA_VERSION }}
  nextflowParsingLambdaVersion: {{ NEXTFLOW_PARSING_LAMBDA_VERSION }}
  galaxyParsingPluginVersion: {{ GALAXY_PLUGIN_VERSION }}
  checkUrlLambdaVersion: {{ CHECK_URL_LAMBDA_VERSION }}
  
