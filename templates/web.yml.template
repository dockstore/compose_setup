template: Hello, %s!
quayClientID: {{ QUAY_CLIENT_ID }} 
# port should match the port where the UI is being hosted, 9000 by default
quayRedirectURI: dev-only
githubClientID: 
  - {{ GITHUB_CLIENT2_ID }}
githubClientSecret: 
  - {{ GITHUB_CLIENT2_SECRET }}
# port should match the port where the UI is being hosted, 9000 by default
githubRedirectURI: dev-only
bitbucketClientID: {{ BITBUCKET_CLIENT_ID }}
bitbucketClientSecret: {{ BITBUCKET_CLIENT_SECRET }} 

gitlabClientID: {{ GITLAB_CLIENT_ID }}
gitlabClientSecret: {{ GITLAB_CLIENT_SECRET }}
gitlabRedirectURI: http{{#HTTPS}}s{{/HTTPS}}://{{ DOMAIN_NAME }}:443/auth/gitlab.com

googleClientID: {{ GOOGLE_CLIENT_ID }}
googleClientSecret: {{ GOOGLE_CLIENT_SECRET }}
googleRedirectURI: http{{#HTTPS}}s{{/HTTPS}}://{{ DOMAIN_NAME }}:443

discourseKey: {{ DISCOURSE_KEY }}
discourseUrl: {{ DISCOURSE_URL }}

limitConfig:
  workflowLimit: 50
  workflowVersionLimit: 50

esconfiguration:
  port: 9200
  hostname: elasticsearch

authorizerType: {{ AUTHORIZER_TYPE }}
externalGoogleClientIdPrefixes:
  - {{ EXTERNAL_GOOGLE_CLIENT_PREFIX1  }}

samconfiguration:
  basepath: {{ SAM_PATH }}


# the following values describe where the webservice is being run (and on what port and using what scheme) to configure swagger
externalConfig:
  basePath: /api/
  hostname: {{ DOMAIN_NAME }}
  scheme: http{{#HTTPS}}s{{/HTTPS}}
  port:

authenticationCachePolicy: maximumSize=10000, expireAfterAccess=10m

httpClient:
  timeout: 5500ms
  connectionTimeout: 5500ms
  timeToLive: 1h
  cookiesEnabled: false
  maxConnections: 1024
  maxConnectionsPerRoute: 1024
  keepAlive: 0ms
  retries: 0

database:
  # the name of your JDBC driver
  driverClass: org.postgresql.Driver

  # the username
  user: postgres

  # the password
  password: postgres

  # the JDBC URL
  url: jdbc:postgresql://postgres:5432/postgres

  # any properties specific to your JDBC driver:
  properties:
    charSet: UTF-8
    hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
    # create database as needed, disable in production
    hibernate.hbm2ddl.auto: validate

  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* MyApplication Health Check */ SELECT 1"

  # the minimum number of connections to keep open
  minSize: 8

  # the maximum number of connections to keep open
  maxSize: 32

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false

{{#LOGSTASH}}
server:
  requestLog:
    type: classic
    timeZone: UTC
    appenders:
      - type: logstash
        host: {{ LOGSTASH_HOST }}
        port: {{#PRODUCTION}}5055{{/PRODUCTION}}{{^PRODUCTION}}5066{{/PRODUCTION}}
{{/LOGSTASH}}

uiConfig:
  # Must end with a slash
  discourseUrl: {{ DISCOURSE_URL }}
  dnaStackImportUrl: https://app.dnastack.com/#/app/workflow/import/dockstore
  fireCloudImportUrl: {{ FIRECLOUD_IMPORT_URL }}
  dnaNexusImportUrl: https://platform.dnanexus.com/panx/tools/import-workflow
  terraImportUrl: {{ TERRA_IMPORT_URL }}

  gitHubAuthUrl: https://github.com/login/oauth/authorize
  gitHubRedirectPath: /auth/github.com
  gitHubScope: read:org,user:email

  quayIoAuthUrl: https://quay.io/oauth/authorize
  quayIoRedirectPath: /auth/quay.io
  quayIoScope: repo:read,user:read

  bitBucketAuthUrl: https://bitbucket.org/site/oauth2/authorize

  gitlabAuthUrl: https://gitlab.com/oauth/authorize
  gitlabRedirectPath: /auth/gitlab.com
  gitlabScope: api

  googleScope: profile email

  cwlVisualizerUri: https://view.commonwl.org

  enableLaunchWithFireCloud: {{ ENABLE_LAUNCH_WITH_FIRECLOUD }}

