# Expires map
map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   86400;
    application/javascript     86400;
    application/octet-stream   604800;
    ~image/                    604800;
}

server {
    server_name  www.{{ DOMAIN_NAME }};
    listen       4200;
    return 301 http{{#HTTPS}}s{{/HTTPS}}://{{ DOMAIN_NAME }}/$request_uri;
}


server {
    server_name  {{ DOMAIN_NAME }};
    include /etc/nginx/conf.d/default.nginx_https.shared.conf;
    listen       4200 http2;

    ##
    # `gzip` Settings
    # https://www.digitalocean.com/community/tutorials/how-to-add-the-gzip-module-to-nginx-on-ubuntu-14-04 
    #
    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon application/javascript;

    expires $expires;

    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
    add_header 'Access-Control-Expose-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Limit body size of a request to 50K to protect Java server from DOS attacks.
    client_max_body_size 50k;

    # used to redirect swagger.json as retrieved by swagger ui without changes
    location = /swagger.json {
        #proxy_pass 	http://webservice:8080/swagger.json;
        rewrite ^/(.*)$ http{{#HTTPS}}s{{/HTTPS}}://{{ DOMAIN_NAME}}/api/swagger.json permanent;
    }

    # used when port 8443 was unreachable from google
    location = /sitemap.txt {
        proxy_pass 	http://webservice:8080/metadata/sitemap;
    }
    
    location = /rss.xml {
        proxy_pass     http://webservice:8080/metadata/rss;
    }

    location /static {
        proxy_pass     http://webservice:8080/static;
    }

    location /api/ {
        rewrite ^ $request_uri;
        rewrite ^/api/(.*) $1 break;
        return 400;
        proxy_pass     http://webservice:8080/$uri;
    }

    location / {
        root   /usr/share/nginx/html2;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html =404;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html2;
    }
}

server {
    server_name  {{ DOMAIN_NAME }};
    include /etc/nginx/conf.d/default.nginx_https.shared.conf;
    listen 8080 http2;

    location /static {
        rewrite ^/(.*)$ http{{#HTTPS}}s{{/HTTPS}}://{{ DOMAIN_NAME}}/$1 permanent;
        proxy_pass     http://webservice:8080/static;
    }

    location / {
        proxy_pass     http://webservice:8080;
    }
}
