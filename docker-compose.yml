version: '2'

services:
  postgres:
    image: postgres:10.10
    restart: always
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    expose: 
      - "5432"
    logging:
      driver: "awslogs"
      options:
        awslogs-group: ${LOG_GROUP_NAME}
        awslogs-stream: "postgres"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.3
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    restart: always
    volumes:
      - esdata1:/usr/share/elasticsearch/data
      - ./config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    expose:
      - "9200"
      - "9300"
    logging:
      driver: "awslogs"
      options:
        awslogs-group: ${LOG_GROUP_NAME}
        awslogs-stream: "elasticsearch"

  migration: 
    image: quay.io/dockstore/dockstore-webservice:${DOCKSTORE_VERSION}
    depends_on:
      - postgres
    volumes:
      - log_volume:/dockstore_logs
      - ./config/web.yml:/home/web.yml
      - ./config/init_migration.sh:/home/init_migration.sh
    command: ["dockerize", "-wait", "tcp://postgres:5432", "-timeout", "60s", "bash", "/home/init_migration.sh"]
    logging:
      driver: "awslogs"
      options:
        awslogs-group: ${LOG_GROUP_NAME}
        awslogs-stream: "migration"

  webservice: 
    image: quay.io/dockstore/dockstore-webservice:${DOCKSTORE_VERSION}
    restart: always
    depends_on:
      - postgres
      - elasticsearch
      - migration
    volumes:
      - log_volume:/dockstore_logs
      - ./config/web.yml:/home/web.yml
      - ./config/init_webservice.sh:/home/init_webservice.sh
      - ${GITHUB_APP_PRIVATE_KEY_FILE}:/home/dockstore_github_app_private_key.pem
      - ../language-plugins/:/root/.dockstore/language-plugins
    command: ["dockerize", "-wait", "tcp://postgres:5432", "-timeout", "60s", "bash", "/home/init_webservice.sh"]
    expose:
      - "8081"
    logging:
      driver: "awslogs"
      options:
        awslogs-group: ${LOG_GROUP_NAME}
        awslogs-stream: "webservice"
  nginx_dockstore:
    build:
      context: .
      dockerfile: config/Dockerfile_ui2
    restart: always
    depends_on:
      - webservice
    ports:
      - "8443:8080"
      - "80:4200"
    volumes:
      - ./config/default.nginx_http.conf:/etc/nginx/conf.d/default.conf:ro
      - ./config/default.nginx_http.shared.conf:/etc/nginx/conf.d/default.nginx_http.shared.conf:ro
    logging:
      driver: "awslogs"
      options:
        awslogs-group: ${LOG_GROUP_NAME}
        awslogs-stream: "nginx_dockstore"

# re-enable if we go down the route of these metrics going into ELK
#  metricbeat:
#    image: docker.elastic.co/beats/metricbeat:6.4.0
#    user: root
#    restart: always
#    depends_on:
#      - webservice
#      - postgres
#    volumes:
#      - /proc:/hostfs/proc:ro
#      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
#      - /:/hostfs:ro
#      - ./config/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
#    command:
#      - "--strict.perms=false"
#      - "-system.hostfs=/hostfs"
#    logging:
#      driver: "awslogs"
#      options:
#        awslogs-group: ${LOG_GROUP_NAME}
#        awslogs-stream: "metricbeat"

volumes:
  log_volume: 
  esdata1:
    driver: local
