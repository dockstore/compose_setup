version: '2'

services:

  migration: 
    image: quay.io/dockstore/dockstore-webservice@${DOCKSTORE_IMAGE_DIGEST}
    volumes:
      - log_volume:/dockstore_logs
      - ./config/web.yml:/home/web.yml
      - ./config/init_migration.sh:/home/init_migration.sh
    command: ["bash", "/home/init_migration.sh"]
    logging:
      driver: "awslogs"
      options:
        awslogs-group: ${LOG_GROUP_NAME}
        awslogs-stream: "migration"

  webservice: 
    image: quay.io/dockstore/dockstore-webservice@${DOCKSTORE_IMAGE_DIGEST}
    restart: always
    depends_on:
      - migration
    volumes:
      - log_volume:/dockstore_logs
      - ./config/web.yml:/home/web.yml
      - ./config/init_webservice.sh:/home/init_webservice.sh
      - ${GITHUB_APP_PRIVATE_KEY_FILE}:/dockstore/github-key/dockstore-github-private-key.pem
      - ../language-plugins/:/root/.dockstore/language-plugins
    command: ["bash", "/home/init_webservice.sh"]
    ports:
      - "8081:8081"
    logging:
      driver: "awslogs"
      options:
        awslogs-group: ${LOG_GROUP_NAME}
        awslogs-stream: "webservice"
  nginx_dockstore:
    build:
      context: .
      dockerfile: config/Dockerfile_ui2
    restart: always
    depends_on:
      - webservice
    ports:
      - "80:4200"
    volumes:
      - ./config/default.nginx_http.conf:/etc/nginx/conf.d/default.conf:ro
      - ./config/default.nginx_http.shared.conf:/etc/nginx/conf.d/default.nginx_http.shared.conf:ro
      - ./config/default.nginx_http.security.conf:/etc/nginx/conf.d/default.nginx_http.security.conf:ro
    logging:
      driver: "awslogs"
      options:
        awslogs-group: ${LOG_GROUP_NAME}
        awslogs-stream: "nginx_dockstore"

# re-enable if we go down the route of these metrics going into ELK
#  metricbeat:
#    image: docker.elastic.co/beats/metricbeat:6.4.0
#    user: root
#    restart: always
#    depends_on:
#      - webservice
#    volumes:
#      - /proc:/hostfs/proc:ro
#      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
#      - /:/hostfs:ro
#      - ./config/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
#    command:
#      - "--strict.perms=false"
#      - "-system.hostfs=/hostfs"
#    logging:
#      driver: "awslogs"
#      options:
#        awslogs-group: ${LOG_GROUP_NAME}
#        awslogs-stream: "metricbeat"

volumes:
  log_volume: 
  esdata1:
    driver: local
